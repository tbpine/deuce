@page
@model ScoringPageModel
@{
    Layout = "_LayoutFinder";
}
@using deuce
@using deuce.ext

<!-- Page content -->
<main class="content-wrapper">
    <div class="container pt-4 pt-sm-5 pb-5 mb-xxl-3">
    <div class="row pt-2 pt-sm-0 pt-lg-2 pb-2 pb-sm-3 pb-md-4 pb-lg-5">


        <!-- Sidebar navigation that turns into offcanvas on screens < 992px wide (lg breakpoint) -->
        <aside class="col-lg-3" style="margin-top: -105px">
        <div class="offcanvas-lg offcanvas-start sticky-lg-top pe-lg-3 pe-xl-4" id="accountSidebar">
            <div class="d-none d-lg-block" style="height: 105px"></div>
            <!-- Header -->
            <div class="offcanvas-header d-lg-block py-3 p-lg-0">
            <div class="d-flex flex-row flex-lg-column align-items-center align-items-lg-start">
                <div class="flex-shrink-0 bg-body-secondary border rounded-circle overflow-hidden" style="width: 64px; height: 64px">
                <img src="" alt="Avatar">
                </div>
                <div class="pt-lg-3 ps-3 ps-lg-0">
                <h6 class="mb-1">Michael Williams</h6>
                <p class="fs-sm mb-0">m.williams@example.com</p>
                </div>
            </div>
            <button type="button" class="btn-close d-lg-none" data-bs-dismiss="offcanvas" data-bs-target="#accountSidebar" aria-label="Close"></button>
            </div>

            <!-- Body (Navigation) -->
            <div class="offcanvas-body d-block pt-2 pt-lg-4 pb-lg-0">
            <nav class="list-group list-group-borderless">
                <a class="list-group-item list-group-item-action d-flex align-items-center" href="account-profile.html">
                <i class="fi-user fs-base opacity-75 me-2"></i>
                My profile
                </a>
                <a class="list-group-item list-group-item-action d-flex align-items-center" aria-current="page" href="account-listings.html">
                <i class="fi-layers fs-base opacity-75 me-2"></i>
                Events
                </a>
                <a class="list-group-item list-group-item-action d-flex align-items-center active" aria-current="page" href="account-listings.html">
                <i class="fi-layers fs-base opacity-75 me-2"></i>
                Scores
                </a>
                <a class="list-group-item list-group-item-action d-flex align-items-center" href="account-payment.html">
                <i class="fi-credit-card fs-base opacity-75 me-2"></i>
                Payment details
                </a>
                <a class="list-group-item list-group-item-action d-flex align-items-center" href="account-settings.html">
                <i class="fi-settings fs-base opacity-75 me-2"></i>
                Account settings
                </a>
                <a class="list-group-item list-group-item-action d-flex align-items-center" href="help-topics-v1.html">
                <i class="fi-help-circle fs-base opacity-75 me-2"></i>
                Help center
                </a>
            </nav>
            <nav class="list-group list-group-borderless pt-3">
                <a class="list-group-item list-group-item-action d-flex align-items-center" href="account-signin.html">
                <i class="fi-log-out fs-base opacity-75 me-2"></i>
                Sign out
                </a>
            </nav>
            </div>
        </div>
        </aside>


        <!-- Account listings content -->
        <div class="col-lg-9">
        <h1 class="h2 pb-2 pb-lg-3">@Model.Title</h1>

        <!-- Nav pills -->
        <div class="nav overflow-x-auto mb-2">
            <h1 class="h4 me-4 pb-2 pb-lg-3">Rounds</h1>
            <ul class="nav nav-pills flex-nowrap gap-2 pb-2 mb-1" role="tablist" id="pills_round">
            @for(int i = 1 ; i <=  @Model.NoRounds; i++){
                <li class="nav-item me-1" role="presentation">
                @{ string active = (i == (Model.CurrentRound+1) ? "active" : "");}                    
                 <button type="button" class="nav-link text-nowrap @active" id="published-tab" data-bs-toggle="pill" data-bs-target="#published" role="tab" aria-controls="published"
                 onclick="func1(@(i-1));" > 
                @i
                 </button> 
                </li>
            }
            </ul>
        </div>

        <div class="tab-content">

            <!-- Published tab -->
            <div class="tab-pane fade show active" id="published" role="tabpanel" aria-labelledby="published-tab">

            <!-- Master checkbox + Action buttons -->
            <div class="nav align-items-center mb-4">
                <div class="d-flex flex-wrap" id="published-action-buttons">
                    <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4" href="#!">
                        <i class="fi-printer fs-base me-2"></i>
                        <span class="hover-effect-underline stretched-link d-none d-md-inline">Print</span>
                    </a>
                </div>
                <div class="d-flex flex-wrap" id="published-action-buttons">
                    <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4" href="#!">
                        <i class="fi-save fs-base me-2"></i>
                        <span class="hover-effect-underline stretched-link d-none d-md-inline">Save</span>
                    </a>
                </div>
                <div class="d-flex flex-wrap" id="published-action-buttons">
                    <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4" href="#!">
                        <i class="fi-refresh-ccw fs-base me-2"></i>
                        <span class="hover-effect-underline stretched-link d-none d-md-inline">Reload</span>
                    </a>
                </div>
            </div>

            <!-- Published listings -->
            <form asp-action="~/Scoring" method="post" id="the_form">
                <input id="current_round" name="current_round" type="hidden" value="0"/>
                <div class="vstack gap-4" id="publishedSelection">
                    @{int rIdx = 0;}
                    @foreach(var perm in  Model.Rounds(Model.CurrentRound).Permutations)
                    {
                        rIdx++;
                        <div>
                            <i class="fi-minus position-relative top-50 start-0 translate-middle-y" id="toogle_icon_round_@rIdx"></i>
                            <a class="btn btn-outline-secondary mb-3" href="#round_@rIdx" data-bs-toggle="collapse" role="button" aria-expanded="true" aria-controls="round_@rIdx"
                            onclick="toogleExpansion('toogle_icon_round_@rIdx')">
                            @perm.GetSummary()
                        </a></div>
                        <div class="collapse show" id="round_@rIdx" aria-expanded="true">
                        
                            @for(int j = 0 ; j < perm.NoMatches; j++)
                            {
                                Match match = perm.GetMatchAtIndex(j);

                                <!-- Item -->
                                <div class="d-sm-flex align-items-center border mb-2 pb-2" >
                                    <div class="d-inline-flex position-relative z-2 pt-1 pb-2 ps-2 p-sm-0 ms-2 ms-sm-0 me-sm-0 w-100"
                                    style="height:120px;">
                                        @* <div class="form-check position-relative z-1 fs-lg m-0">
                                        <input type="checkbox" class="form-check-input" checked>
                                        </div> *@
                                        @{ int totalCols = 3*@Model.NoSets + 2; int cols =2; }

                                        <div class="row row-cols-@cols row-cols-lg-@cols w-100 ms-0">
                                            <div class="col mb-3 bg-body-secondary"><span>@(match.GetTitle())</span></div>
                                            <!-- #headers  -->
                                            @for(int i = 0; i < Model.NoSets;i++)
                                            {
                                                <div class="col mb-3 bg-body-secondary"><span>Set @(i+1)</span></div>
                                            }
                                            <div class="col pt-1" ><span>@(match.GetHomeTeam())</span></div>
                                            @for(int i = 0; i < Model.NoSets;i++)
                                            {
                                                <div class="col">
                                                    <input class="form-control border-black pb-1" style="width:90px" name="home_match_@(j)_set_@(i+1)" >
                                                </div>
                                            }
                                            <div class="col pt-1">@(match.GetAwayTeam())</div>
                                            @for(int i = 0; i < Model.NoSets;i++)
                                            {
                                                <div class="col">
                                                    <input class="form-control border-black pt-1" style="width:90px" name="away_match_@(j)_set_@(i+1)">
                                                </div>
                                            }
                                            
                                        </div>

                                    </div>

                                
                                </div>
                            }
                        </div>
                    }
        
                </div>
            </form>
            </div>


     
        </div>
        </div>
    </div>
    </div>
</main>


<!-- Page footer -->
<footer class="footer bg-body border-top pt-5" data-bs-theme="light">
</footer>


<!-- Sidebar navigation offcanvas toggle that is visible on screens < 992px wide (lg breakpoint) -->
<button type="button" class="fixed-bottom z-sticky w-100 btn btn-lg btn-dark border-0 border-top border-light border-opacity-10 rounded-0 pb-4 d-lg-none" data-bs-toggle="offcanvas" data-bs-target="#accountSidebar" aria-controls="accountSidebar" data-bs-theme="light">
    <i class="fi-sidebar fs-base me-2"></i>
    Account menu
</button>


<!-- Back to top button -->
<div class="floating-buttons position-fixed top-50 end-0 z-sticky me-3 me-xl-4 pb-4">
    <a class="btn-scroll-top btn btn-sm bg-body border-0 rounded-pill shadow animate-slide-end" href="#top">
    Top
    <i class="fi-arrow-right fs-base ms-1 me-n1 animate-target"></i>
    <span class="position-absolute top-0 start-0 w-100 h-100 border rounded-pill z-0"></span>
    <svg class="position-absolute top-0 start-0 w-100 h-100 z-1" viewBox="0 0 62 32" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect x=".75" y=".75" width="60.5" height="30.5" rx="15.25" stroke="currentColor" stroke-width="1.5" stroke-miterlimit="10"/>
    </svg>
    </a>
</div>


<!-- Bootstrap + Theme scripts -->
<script src="assets/js/theme.min.js"></script>
<script >
    function func1(round)
    {
        let n1 = document.getElementById("current_round");
        n1.setAttribute("value", round);
        
        document.getElementById("the_form").submit();

    }

    function toogleExpansion(name)
    {
        let n1 = document.getElementById(name);
        let c = n1.getAttribute("class");

        if (c === "fi-plus position-relative top-50 start-0 translate-middle-y") n1.setAttribute("class", "fi-minus position-relative top-50 start-0 translate-middle-y");
        else n1.setAttribute("class", "fi-plus position-relative top-50 start-0 translate-middle-y");
    }
</script>