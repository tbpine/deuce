@page
@model TournamentPlayersPageModel
@{
    Layout="_LayoutWizard";
}
@using deuce

<style>
  .zero_height {height: 0px;}
</style>

<!-- Account listings content -->
<div class="col-lg-9 col-xl-8">
  <h1 class="h2 pb-2 pb-lg-3">Players / Teams</h1>

  <!-- Nav pills -->
  <div class="nav overflow-x-auto mb-2">
    @* <ul class="nav nav-pills flex-nowrap gap-2 pb-2 mb-1" role="tablist">
      <li class="nav-item me-1" role="presentation">
        <button type="button" class="nav-link text-nowrap active" id="published-tab" data-bs-toggle="pill" data-bs-target="#published" role="tab" aria-controls="published" aria-selected="true">
        </button>
    using iText.Forms.Xfdf;
    using Org.BouncyCastle.Asn1;
      </li>
    </ul> *@
  </div>

  <div class="tab-content">

    <!-- Published tab -->
    <div class="tab-pane fade show active" id="published" role="tabpanel" aria-labelledby="published-tab">

      <!-- Master checkbox + Action buttons -->
      <div class="nav align-items-center mb-4">
        <div class="nav-link fs-lg ps-0 pe-2 py-2 mt-n1 me-4" data-master-checkbox='{"container": "#page_form", "label": "Select all the items to apply the same action to them", "labelChecked": "Unselect all", "showOnCheck": "#published-action-buttons"}'>
          <input type="checkbox" class="form-check-input" id="published-master">
          <label for="published-master" class="form-check-label fw-normal mt-1 ms-2">Unselect all</label>
        </div>
        <div class="d-flex flex-wrap" id="published-action-buttons">
          <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4" href="#!" onclick="addTeamPost()">
            <i class="fi-plus-square fs-base me-2"></i>
            <span class="hover-effect-underline stretched-link d-none d-md-inline">Add Team</span>
          </a>
          <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4" href="#!">
            <i class="fi-layers fs-base me-2"></i>
            <span class="hover-effect-underline stretched-link d-none d-md-inline">Import</span>
          </a>
          <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4" href="#!">
            <i class="fi-share fs-base me-2"></i>
            <span class="hover-effect-underline stretched-link d-none d-md-inline">Export</span>
          </a>
          <a class="nav-link position-relative text-danger px-0 py-2" href="#!">
            <i class="fi-trash fs-base me-1"></i>
            <span class="hover-effect-underline stretched-link d-none d-md-inline">Delete</span>
          </a>
        </div>
      </div>

      <!-- Published listings -->
      <form class="vstack gap-4 mb-4" id="page_form"  asp-action="~/TournamentPlayers">
        <input name="action" id="action" type="hidden" />
        <!-- An Item  -->
        @for(int i = 0 ; i < Model.Teams?.Count; i++)
        {
          Team? iterTeam = Model.Teams[i];
          int teamId = iterTeam?.Id??0;
          //Pathing
          string attrTeamName =$"team_{iterTeam?.Index??i}_{teamId}";
          string attrTeamLable =iterTeam?.Label??"";
          string attrTeamCtlVisible= Model.EntryType == (int)EntryType.Team ? "visible" : "invisible zero_height";
          string attrCanAddPlayer = "invisible zero_height";
          string attrCanDeletePlayer = "invisible";

          <div class="d-sm-flex align-items-center">
            <div class="d-inline-flex position-relative z-2 pt-1 pb-2 ps-2 p-sm-0 ms-2 ms-sm-0 me-sm-2">
              <div class="form-check position-relative z-1 fs-lg m-0">
                <input type="checkbox" class="form-check-input">
              </div>
              <span class="position-absolute top-0 start-0 w-100 h-100 bg-body border rounded d-sm-none"></span>
            </div>
            <article class="card w-100 p-2">
              <div class="d-sm-none" style="margin-top: -44px"></div>
              <div class="row row-cols-2 row-cols-sm-2 g-0 @attrTeamCtlVisible">
                <div class="col-1">
                  <label for="@attrTeamName" class="form-label p-2">Team Name:</label>
                </div>
                <div class="col-2">
                  <input id="@attrTeamName" class="form-control p-2 w-75" name="@attrTeamName" value="@attrTeamLable"/>
                </div>
                
              </div>
              <div class="row g-0 mb-2 @attrCanAddPlayer">
                <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4 ms-2" href="#!">
                  <i class="fi-user-plus fs-base me-2"></i>
                  <span class="hover-effect-underline stretched-link d-none d-md-inline">Add Player</span>
                </a>
              </div>
              @for(int j = 0; j < Model.TeamSize ; j++)
              {
                Player? iterPlayer = iterTeam?.Players.ElementAt(j);
                int teamPlayerId = iterPlayer?.TeamPlayerId??0;
                
                string attrPlayerName = $"team_{i}_{teamId}_player_{j}_{teamPlayerId}";
                string attrPlayerNameNew = $"team_{i}_{teamId}_player_{j}_{teamPlayerId}_new";

                int selectionIdx = i*Model.TeamSize + j;
                List<SelectListItem>? memberList = Model.SelectMember?.ElementAt(selectionIdx);
                memberList?.All(e=>{e.Selected = false; return true;});
                
                string newPlayerLabel = "new_player_label_" + selectionIdx.ToString();
                string clsShowHideNewPlayer ="";

                var selectedMember = memberList?.Find(e=>e.Value == iterPlayer?.Member?.Id.ToString());
                string newPlayerName = "";
                if (selectedMember is not null) 
                {
                  selectedMember.Selected = true;
                  //Set the initial visibility of new players entry
                  clsShowHideNewPlayer = "invisible zero_height";
                  newPlayerName = "";
                }
                else if ( (iterPlayer?.Member?.Id??0) < 1)
                {
                  //Set new player name
                    newPlayerName = iterPlayer?.ToString()??"";
                    newPlayerName = newPlayerName.Trim();
                }

                else if (memberList is not null && memberList.Count > 0) memberList[0].Selected = true;

                <div class="row row-cols-*-3 g-0 mb-2">
                  <div class="col-5 me-2"><span>Members</span></div>
                  <div class="col-5 me-2 @clsShowHideNewPlayer" id="@newPlayerLabel" ><span>New Player</span></div>
                  <div class="col-1"></div>
                  <div class="col-5 me-2">
                    <select id="@attrPlayerName" name="@attrPlayerName" class="form-select-lg" aria-label="Select Player"
                    asp-items="@memberList" data-select='{"searchEnabled" : true , "classNames": {"containerInner": ["form-select", "form-select-lg"]}}'
                    onchange="showHideNewPlayer('@attrPlayerName','@attrPlayerNameNew', '@newPlayerLabel')">
                      
                      </select>
                  </div>
                  <div class="col-5 me-2">
                    <input class="form-control @clsShowHideNewPlayer" placeholder="New Player" aria-placeholder="New Player" name="@attrPlayerNameNew" id="@attrPlayerNameNew"
                    value="@newPlayerName"/>
                  </div>
                  <div class="col-1">
                    <a class="nav-link position-relative px-0 pe-sm-2 py-2 me-4 ms-2 @attrCanDeletePlayer">
                      <i class="fi-close-circle fs-base me-2"></i>
                    </a>
                  </div>
                </div>
              }
            </article>
          </div>
        }
        
      </form>
      @{
        string clsShowHideError = String.IsNullOrEmpty(Model.Error) ? "invisible" : "visible";
      }
      <div class="alert alert-primary @clsShowHideError" role="alert">@Model.Error</div>
    </div>

  </div>
</div>
<script src="~/js/players.js"></script>

